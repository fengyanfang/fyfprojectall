# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-14 10:23
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('usertype', models.PositiveSmallIntegerField()),
                ('desc', models.CharField(blank=True, max_length=500, null=True)),
                ('idcardnumber', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('avatar_url', models.URLField(blank=True, max_length=300, null=True)),
                ('phonenumber', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('realname', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sq_admin',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
                ('display_idx', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'db_table': 'sq_course',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Course')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sq_lesson',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realname', models.CharField(db_index=True, max_length=30)),
                ('startcoursedate', models.DateField(db_index=True)),
                ('graduated', models.BooleanField(db_index=True, default=False)),
                ('active', models.BooleanField(default=True)),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
            ],
            options={
                'db_table': 'sq_student',
            },
        ),
        migrations.CreateModel(
            name='StudentCheckin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkintime', models.DateTimeField(default=datetime.datetime.now)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkin_students', to='common.Lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_checkin', to='common.Student')),
            ],
            options={
                'db_table': 'sq_student_checkin',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realname', models.CharField(db_index=True, max_length=30)),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
                ('display_idx', models.PositiveSmallIntegerField(default=0)),
                ('courses', models.ManyToManyField(related_name='course_teacher', to='common.Course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sq_teacher',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('courselist', models.TextField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
                ('display_idx', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'db_table': 'sq_training',
            },
        ),
        migrations.CreateModel(
            name='TrainingGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('desc', models.CharField(blank=True, max_length=1500, null=True)),
                ('display_idx', models.PositiveSmallIntegerField(default=0)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Grade', to='common.Training')),
            ],
            options={
                'db_table': 'sq_training_grade',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='training',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traningstudents', to='common.Training'),
        ),
        migrations.AddField(
            model_name='student',
            name='traininggrade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traninggradestudent', to='common.TrainingGrade'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='studentcheckin',
            unique_together=set([('student', 'lesson')]),
        ),
        migrations.AlterIndexTogether(
            name='student',
            index_together=set([('user', 'graduated', 'active')]),
        ),
    ]
